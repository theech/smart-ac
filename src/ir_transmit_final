
#include <Arduino.h>
#include <IRremoteESP8266.h>
#include <IRsend.h>
#include <ir_Gree.h>

#define sprint Serial.print
#define sprintln Serial.println
#define sprintf Serial.printf

const uint16_t kIrLed = 2;
IRGreeAC ac(kIrLed);

const int SW1 = 12;
const int SW2 = 14;

//Switch setup
int readSW1;		  // Status SW1
int previous1 = HIGH; // the previous SW1
int readSW2;		  // Status SW1
int previous2 = HIGH; // the previous SW2
long lastSW1 = 0;	  // the last time the output pin was toggled
long lastSW2 = 0;
long debounce = 200; // the debounce time, increase if the output flickers

void printState()
{
	// Display the settings.
	sprintln("GREE A/C remote is in the following state:");
	sprintf(" %s\n", ac.toString().c_str());
	// Display the encoded IR sequence.
	unsigned char *ir_code = ac.getRaw();
	sprint("IR Code: 0x");
	for (uint8_t i = 0; i < kGreeStateLength; i++)
		sprintf("%02X", ir_code[i]);
	sprintln();
}

void setup()
{
	ac.on();
	Serial.begin(115200);
	pinMode(SW1, INPUT_PULLUP);
	pinMode(SW2, INPUT_PULLUP);
	delay(200); // Set up what we want to send. See ir_Gree.cpp for all the options.
	// Most things default on to off.
	sprintln("Default state of the remote.");
	printState();
	sprintln("Setting desired state for A/C.");
	ac.on();
	ac.setFan(3);
	// kGreeAuto, kGreeDry, kGreeCool, kGreeFan, kGreeHeat
	ac.setMode(kGreeCool);
	ac.setTemp(25); // 16-30C
	ac.setSwingVertical(true, kGreeSwingAuto);
	ac.setXFan(true);
	ac.setLight(true);
	ac.setSleep(false);
	ac.setTurbo(true);

	pinMode(LED_BUILTIN, OUTPUT);
}

void loop()
{
	int khz = 38;
	readSW1 = digitalRead(SW1); //ac_on
	if (readSW1 == LOW && previous1 == HIGH && millis() - lastSW1 > debounce)
	{
		ac.on();
		ac.send();
		//Serial.println("Send IR A/C ON");
		lastSW1 = millis();
		Serial.println("remote on");
	}
	previous1 = readSW1;

	readSW2 = digitalRead(SW2); //ac_off
	if (readSW2 == LOW && previous2 == HIGH && millis() - lastSW2 > debounce)
	{
		ac.off();
		ac.send();
		//Serial.println("Send IR A/C OFF");
		lastSW2 = millis();
		Serial.println("remote off");
	}
	previous2 = readSW2;
	delay(10);
}